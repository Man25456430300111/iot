<!DOCTYPE html>
<html lang="en">
  {{>navbar}}
  <head>
    <link rel="shortcut icon" href="#" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no' name='viewport' />
    <link href="../assets/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css" />
    <link href="../assets/css/light-bootstrap-dashboard.css?v=2.0.0 " rel="stylesheet" />
    <link href="../assets/css/demo.css" rel="stylesheet" />
    <script src="../assets/js/core/jquery.3.2.1.min.js" type="text/javascript"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Water Timer</title>
  </head>

  <body onload={drawTP(0);drawEC(0);drawPH(0);}>
    <br></br>
    <div class="wrapper">
      <div class="main-panel">   
        <div class="content">
          <div class="container-fluid">
            <div class="row">                       
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title">EC</h4>
                     <h5 id="ecVal" class="card-title">10.0 us/cm</h4>
                  </div>
                  <div class="card-body">
                    <canvas id="EC" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                  </div>
                </div>
              </div>    
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title"> PH </h4>
                     <h4 id="phVal" class="card-title">10.0</h4>
                  </div>
                  <div class="card-body">
                    <canvas id="PH" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                   
                    
                  </div>
                </div>
              </div>
            </div>
            <div class="row">  
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title">Temperature</h4>
                    <h4 id="temperatureVal" class="card-title">10.0  C</h4>
                  </div>
                  <div class="card-body">
                   
                    <canvas id="TP" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                   
                    
                  </div>
                </div>
              </div>  
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title">Humidity</h4>
                    <h4 id="humVal" class="card-title">10.0</h4>
                  </div>
                  <div class="card-body">
                     <canvas id="HM" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                  </div>
                </div>
              </div>                              
            </div>

            <div class="row">  
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title">NitroVal</h4>
                    <h4 id="NitroVal" class="card-title"> 0 </h4>
                  </div>
                  <div class="card-body">
                   
                    <canvas id="Nitro" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                   
                    
                  </div>
                </div>
              </div>  
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title">Phosphorus</h4>
                    <h4 id="PhosVal" class="card-title">0</h4>
                  </div>
                  <div class="card-body">
                     <canvas id="Phosphorus" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                  </div>
                </div>
              </div>                              
            </div>
            <div class="row">  
              <div class="col-md-6">
                <div class="card ">
                  <div class="card-header ">
                    <h4 class="card-title">Potassium</h4>
                    <h4 id="PotassiumVal" class="card-title"> 0 </h4>
                  </div>
                  <div class="card-body">
                   
                    <canvas id="Potassium" width="300" height="220" style="border:1px solid #3d3d3"></canvas>
                   
                    
                  </div>
                </div>
              </div>
            </div>  
          </div> 
        </div>
      </div>
    
  </body>
<!--   Core JS Files   -->


<script src="../assets/js/core/jquery.3.2.1.min.js" type="text/javascript"></script>
<script type="text/javascript">
    function drawEC(EC) {
    var canvas = document.getElementById('EC');
    document.getElementById('ecVal').innerHTML = EC + " us/cm";

    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      var width = canvas.width;
      var height = canvas.height;

      ctx.clearRect(0, 0, width, height); // Clear previous drawing

      // คำนวณขนาดของกราฟหยักแต่ละบาร์
      var barWidth = width / 3;
      var barHeight = EC * 3;

      // วาดกราฟหยัก
      ctx.fillStyle = '#FFA500'; // Orange color
      ctx.fillRect((width - barWidth) / 2, height - barHeight, barWidth, barHeight); // วาดหยักในตำแหน่งกลางของ Canvas
    }
  };
    
     
  function drawPH(PH) {
    var canvas = document.getElementById('PH');
    document.getElementById('phVal').innerHTML = PH;

    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      var width = canvas.width;
      var height = canvas.height;

      ctx.clearRect(0, 0, width, height); // Clear previous drawing

      ctx.fillStyle = '#FF4500'; // Orange red color
      ctx.fillRect(0, 0, (PH * 2), width, height); // Draw a rectangle
    }
  };
    
    function drawTP(temp) {
    var canvas = document.getElementById('TP');
    document.getElementById('temperatureVal').innerHTML = temp + " C";

    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      var width = canvas.width;
      var height = canvas.height;

      ctx.clearRect(0, 0, width, height); // Clear previous drawing

      ctx.beginPath();
      ctx.moveTo(0, height);
      ctx.bezierCurveTo(width / 2, height - (temp * 2), width / 2, height - (temp * 2), width, height); // Draw a bezier curve
      ctx.lineWidth = 3;
      ctx.strokeStyle = '#FF5733'; // Orange color
      ctx.stroke();
    }
  };

    function drawHM(hum) {
    var canvas = document.getElementById('HM');
    document.getElementById('humVal').innerHTML = hum;

    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      var width = canvas.width;
      var height = canvas.height;

      ctx.clearRect(0, 0, width, height); // Clear previous drawing

      ctx.beginPath();
      ctx.moveTo(0, height); // เริ่มต้นที่จุด (0, height)
      ctx.lineTo(width, height - (hum * 2)); // วาดเส้นไปยังจุดกึ่งกลาง
      ctx.lineTo(width, height); // วาดเส้นกลับไปยังจุด (width, height)
      ctx.closePath(); // ปิดรูป

      // กำหนดสีของเส้น
      ctx.fillStyle = 'rgba(0, 128, 0, 0.7)'; // Green color with opacity
      ctx.fill(); // เติมสีในรูป

      // กำหนดสีขอบของรูป
      ctx.strokeStyle = 'green';
      ctx.stroke(); // วาดขอบ


    }
  };




  function drawN(N) {
    var canvas = document.getElementById('Nitro');
    document.getElementById('NitroVal').innerHTML = N;

    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      var width = canvas.width;
      var height = canvas.height;

      ctx.clearRect(0, 0, width, height); // Clear previous drawing

      ctx.beginPath();
      ctx.moveTo(0, height); // เริ่มต้นที่จุด (0, height)
      ctx.lineTo(width, height - (N * 3)); // วาดเส้นไปยังจุดกึ่งกลาง
      ctx.lineTo(width, height); // วาดเส้นกลับไปยังจุด (width, height)
      ctx.closePath(); // ปิดรูป

      // กำหนดสีของเส้น
      ctx.fillStyle = 'rgba(0, 128, 0, 0.7)'; // Green color with opacity
      ctx.fill(); // เติมสีในรูป

      // กำหนดสีขอบของรูป
      ctx.strokeStyle = 'green';
      ctx.stroke(); // วาดขอบ


    }
  };

  function drawP(P) {
    var canvas = document.getElementById('Phosphorus');
    document.getElementById('PhosVal').innerHTML = P + " us/cm";

    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      var width = canvas.width;
      var height = canvas.height;

      ctx.clearRect(0, 0, width, height); // Clear previous drawing

      // คำนวณขนาดของกราฟหยักแต่ละบาร์
      var barWidth = width / 3;
      var barHeight = P * 3;

      // วาดกราฟหยัก
      ctx.fillStyle = '#FFA500'; // Orange color
      ctx.fillRect((width - barWidth) / 2, height - barHeight, barWidth, barHeight); // วาดหยักในตำแหน่งกลางของ Canvas
    }
  };

  function drawK(K) {
    var canvas = document.getElementById('Potassium');
    document.getElementById('PotassiumVal').innerHTML = K + " us/cm";

    if (canvas.getContext) {
      var ctx = canvas.getContext('2d');
      var width = canvas.width;
      var height = canvas.height;

      ctx.clearRect(0, 0, width, height); // Clear previous drawing

      // คำนวณขนาดของกราฟหยักแต่ละบาร์
      var barWidth = width / 3;
      var barHeight = K * 3;

      // วาดกราฟหยัก
      ctx.fillStyle = '#FFA500'; // Orange color
      ctx.fillRect((width - barWidth) / 2, height - barHeight, barWidth, barHeight); // วาดหยักในตำแหน่งกลางของ Canvas
    }
  };


  // Create WebSocket connection.
  console.log("tetststs");
  const socket = new WebSocket('ws://localhost:3001');

  socket.addEventListener('open', function (event) {
    //alert("XXXXXXXXXXXX");
    console.log('Connected to WS Server')
  });
  socket.addEventListener('message', function (event) {
    var obj = JSON.parse(event.data);
    console.log('Message from server ', event.data);
    obj.forEach(st => {
      console.log('Message from server ', st.temperature);
      console.log('Message from server ', st.humidity);
      console.log('Message from server ', st.EC);
      console.log('Message from server ', st.PH);
      console.log('Message from server ', st.time);
      console.log('Message from server ', st.n);
      console.log('Message from server ', st.p);
      console.log('Message from server ', st.k);
      

      drawTP(st.temperature);
      drawHM(st.humidity);
      drawEC(st.EC); // Update EC graph with new value
      drawPH(st.PH); // Update PH graph with new value
      drawN(st.n);
      drawP(st.p);
      drawK(st.k);


    });
  });
/*
    function setWaterTimer(id) {
      
      var timer=document.getElementById('waterTimer').value;
      console.log(timer);
      console.log(id);

      $.post("/ajax_updateWaterTimer", {"id": id, "waterTimer": timer}, function(data){

          console.log("aaa  "  + data) 
          //var obj = JSON.parse(data);
          alert("Status: " + data.status);
        });
     
    }

   // Create WebSocket connection.
    console.log("tetststs");
    const socket = new WebSocket('ws://localhost:3001');
    
    socket.addEventListener('open', function (event) {
      //alert("XXXXXXXXXXXX");
      console.log('Connected to WS Server')
    });
    socket.addEventListener('message', function (event) {
      var obj = JSON.parse(event.data);
      console.log('Message from server ', event.data);
      obj.forEach(st => {
        console.log('Message from server ', st.temperature);
        console.log('Message from server ', st.humidity);
        console.log('Message from server ', st.ec);
        console.log('Message from server ', st.ph);

        drawTP(st.temperature);
        drawHM(st.humidity);
        drawEC(st.ec);
        drawPH(st.ph);

      });
    });   */


    function GetMonitorSize() {
        var x = "Total Width: " + screen.width + "px" + "Total Height: " +screen.height;
        //<!--canvas id="wifi" width="600" height="220" style="border:1px solid #3d3d3"></canvas-->
        document.getElementById("ttt").innerHTML = "<canvas id=\"wifi\" width=\"600\" height=\"220\" style=\"border:1px solid #3d3d3\"></canvas>";
       // var width = document.getElementById("width");
        //var height = document.getElementById("height");
        //width.value = screen.width;
        //height.value=screen.height;
    }
</script> 
</html>
